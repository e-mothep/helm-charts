# Default values for quote-app-back.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: harbor.e-mothep.com/keyopssys/quote-app-back
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.1.0"

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets:
  - name: regcred
# This is to override the chart name.
nameOverride: "quote-back"
fullnameOverride: "keyopssys-quote-back"

#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8081

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: quote.e-mothep.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: 8081
readinessProbe:
  httpGet:
    path: /
    port: 8081

#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# helm install psql bitnami/postgresql --namespace keycloak \
#   --set global.postgresql.auth.postgresPassword=manage    \
#   --set global.postgresql.auth.username=admindb_emothep                \
#   --set global.postgresql.auth.password=Qqz41kheops*5tNm            \
#   --set global.postgresql.auth.database=keycloak              \
#   --set primary.persistence.size=2Gi                     \
#   --set global.storageClass=standard

# Postgresql configuration
postgresql:
  enabled: true
  primary:
    persistence:
      size: 2Gi
  global:
    postgresql:
      auth:
        postgresPassword: manage
        password: devisPwd
        username: pgDevis
        database: devis_db
    storageClass: standard
    

quote:
  server:
    port: 8081
  logging:
    level:
      org: INFO
  spring:
    flyway:
      schemas:
        - devis
      locations:
        - classpath:db/migration
    jooq:
      sql-dialect: postgres
    application:
      name: backend
    datasource:
      url: jdbc:postgresql://back-postgresql.quote.svc.cluster.local:5432/devis_db
      username: pgDevis
      password: devisPwd
    security:
      oauth2:
        client:
          registration:
            keycloak:
              client-id: gds-test
              client-secret: saOTA3vb2a2Pwr4iN20HHlaqZ5DbbC7e
          provider:
            keycloak:
              authorizationUri: https://login.keyopssys.com/realms/dev/protocol/openid-connect/auth
              tokenUri: https://login.keyopssys.com/realms/dev/protocol/openid-connect/token
              userInfoUri: https://login.keyopssys.com/realms/dev/protocol/openid-connect/userinfo
              issuerUri: https://login.keyopssys.com/realms/dev
              jwkSetUri: https://login.keyopssys.com/realms/dev/protocol/openid-connect/certs
              userNameAttribute: sub
        resourceserver:
          jwt:
            issuerUri: https://login.keyopssys.com/realms/dev
            jwkSetUri: https://login.keyopssys.com/realms/dev/protocol/openid-connect/certs

env:
  SPRING_CONFIG_LOCATION: /config/application.yaml